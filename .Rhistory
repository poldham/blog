if (test == TRUE) {
type = ".xlsx"
} else {
type = ".xls"}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
df <- readxl::read_excel(paste0("tmp", type))
}
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
str_detect("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/drones%20copy/drones_tac.zip?raw=true", "[.]xlsx|[.]xls|[.]zip")
str_detect("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/drones%20copy/drones_tac.xlsx?raw=true", "[.]xlsx|[.]xls|[.]zip")
str_detect("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/drones%20copy/drones_tac.xls?raw=true", "[.]xlsx|[.]xls|[.]zip")
?unzip
unzip("/Users/pauloldham17inch/Desktop/drones_tac.zip")
test <- unzip("/Users/pauloldham17inch/Desktop/drones_tac.zip")
test
?stop_for_status()
test <- unzip("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
test <- unzip("/Users/pauloldham17inch/Desktop/taxonomy_final.zip")
test
length(test)
test[[1]]
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
tmp <- httr::GET(url, write_disk("tmp.zip"), progress())
tmp <- unzip(tmp)
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
#else {
#    message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension")
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
?read_excel
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
tmp <- httr::GET(url, write_disk("tmp.zip"), progress())
tmp <- unzip("tmp.zip")
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
#else {
#    message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension")
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
tmp <- httr::GET(url, write_disk("tmp.zip"), progress()) %>% unzip()
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
#else {
#    message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension")
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
tmp <- httr::GET(url, write_disk("tmp.zip"), progress()) %>% unzip()
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
#else {
#    message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension")
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
tmp <- httr::GET(url, write_disk("tmp.zip"), progress()) %>% unzip()
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
tmp <- httr::GET(url, write_disk("tmp.zip"), progress()) %>% unzip()
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
df <- readxl::read_excel(paste0("tmp", type))
}
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
tmp <- httr::GET(url, write_disk("tmp.zip", overwrite = TRUE), progress()) %>% unzip()
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
df <- readxl::read_excel(paste0("tmp", type))
}
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
httr::GET(url, write_disk("tmp.zip", overwrite = TRUE), progress()) %>% unzip()
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
df <- readxl::read_excel(paste0("tmp", type))
}
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
httr::GET(url, write_disk("tmp.zip", overwrite = TRUE), progress())
tmp <- unzip("tmp.zip")
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
df <- readxl::read_excel(paste0("tmp", type))
}
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
dfzip
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
rm(dfzip)
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
httr::GET(url, write_disk("tmp.zip", overwrite = TRUE), progress())
tmp <- unzip("tmp.zip")
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
df <- readxl::read_excel(paste0("tmp", type))
}
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
rm(readxl_online)
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
rm(dfxlsx)
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
which("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true" == "[.]xls")
txt <- c("The", "licenses", "for", "most", "software", "are",
"designed", "to", "take", "away", "your", "freedom",
"to", "share", "and", "change", "it.",
"", "By", "contrast,", "the", "GNU", "General", "Public", "License",
"is", "intended", "to", "guarantee", "your", "freedom", "to",
"share", "and", "change", "free", "software", "--",
"to", "make", "sure", "the", "software", "is",
"free", "for", "all", "its", "users")
txt
i <- grep("[gu]", txt)
i
i <- grepl("[gu]", txt)
i
grepl("[.xls]", "https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
grepl("[.xls]", "https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xlsx?raw=true")
regexpr("en", txt)
x <- "http://stat.umn.edu:80/xyz"
m <- regexec("^(([^:]+)://)?([^:/]+)(:([0-9]+))?(/.*)", x)
m
str_detect("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true", "[.]xls!s")
str_detect("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true", "[.]xls^")
str_detect("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true", "[.]xls(?!s)")
readxl_online <- function(url, type = NULL, ...){
test <- stringr::str_detect(url, "[.]xlsx|[.]xls|[.]zip")
if (test == FALSE) {
message("Expecting file extension of type .xlsx, .xls or .zip. Check the URL or the data source for the correct file extension and use the type argument")
}
# test for individual file extensions
t1 <- stringr::str_detect(url, "[.]xlsx")
t2 <- stringr::str_detect(url, "[.]xls")
tz <- stringr::str_detect(url, "[.]zip")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
if (tz == TRUE) { # subfun for zip case
httr::GET(url, write_disk("tmp.zip", overwrite = TRUE), progress())
tmp <- unzip("tmp.zip")
t1 <- stringr::str_detect(tmp[[1]], "[.]xlsx")
t2 <- stringr::str_detect(tmp[[1]], "[.]xls(?!s)")
if (t1 == TRUE) {
type = ".xlsx"
}
if (t2 == TRUE) {
type = ".xls"
}
df <- readxl::read_excel(tmp[[1]])
}
if (!is.null(type)) {
type = type
}
df <- httr::GET(url, write_disk(paste0("tmp", type), overwrite = TRUE))
df <- readxl::read_excel(paste0("tmp", type))
}
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
rm(dfxls)
rm(dfxlsx)
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true")
str_detect("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true", "[.]xls(?!s)")
dfxlsx <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/ewaste/ewaste.xlsx?raw=true")
dfzip <- readxl_online("https://github.com/poldham/opensource-patent-analytics/blob/master/2_datasets/taxonomy_final.zip?raw=true")
#[1] "./taxonomy_final.xlsx"
#[2] "./__MACOSX/._taxonomy_final.xlsx"
blogdown::serve_site()
library(tidyverse)
library(writexl)
df <- tibble(a = c(1,2,3),
b = c("a", "b", "c"),
c = c(TRUE, FALSE, TRUE),
d = c("2017-12-10", "20170815", "2017_06_12")) %>%
writexl::write_xlsx(., "df.xlsx")
df <- read_excel("/Users/pauloldham17inch/Desktop/open_source_master/blog/content/post/df.xlsx", col_names = TRUE, col_types = c("numeric", "text", "logical", "text"))
library(tidyverse)
library(writexl)
df <- tibble(a = c(1,2,3),
b = c("a", "b", "c"),
c = c(TRUE, FALSE, TRUE),
d = c("2017-12-10", "20170815", "2017_06_12")) %>%
writexl::write_xlsx(., "df.xlsx")
df <- read_excel("/Users/pauloldham17inch/Desktop/open_source_master/blog/content/post/df.xlsx", col_names = TRUE, col_types = c("numeric", "text", "logical", "text"))
df <- read_excel("/Users/pauloldham17inch/Desktop/open_source_master/blog/content/post/df.xlsx", col_names = TRUE, col_types = c("numeric", "text", "logical", "text"))
df
knitr::kable(df)
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
dfxls <- readxl_online("https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_all_24294/patentscope_pizza_1940_2005_9659.xls?raw=true", col_types = "text")
error <- readxl_online("https://www.google.co.uk/")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
error <- readxl_online("https://www.google.co.uk/")
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
source('~/Desktop/open_source_master/oldhammisc/readxl_online.R')
blodown::build_site()
blodown::build_site()
