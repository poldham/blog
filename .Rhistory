serve_site()
newobject <- function(yourdata, argument1, argument2, etc)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
?new_content()
?knitr::include_graphics()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
blogdown:::new_post_addin()
serve_site()
serve_site()
serve_site()
serve_site()
load("~/Desktop/open_source_master/blogdown_again/data/kenya_results.rda")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, out.width = "400px", tidy = TRUE)
kenya <- kenya_results$data
save(kenya, file = "data/kenya.rda")
save(kenya, file = "kenya.rda")
library(tidyverse)
kenya %>% count(subject, sort = TRUE)
library(tidyverse)
subjects <- kenya %>%
separate_rows(subject, sep = ",") %>%
count(subject, sort = TRUE)
subjects
library(tidyverse)
library(ggplot2)
subjects[1:15, ] %>%
ggplot2::ggplot(aes(subject, n, fill = subject)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3) +
coord_flip()
kenya$subject[is.na(kenya$subject)] <- "Unknown"
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3) +
coord_flip()
kenya_miss <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "Unknown") %>%
count(subject, type, sort = TRUE)
kenya_jmiss <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "Unknown") %>%
count(created, type, sort = TRUE) %>%
filter(type == "journal-article")
kenya_jmiss$created <- lubridate::ymd(kenya_jmiss$created)
kenya_jmiss$year <- lubridate::year(kenya_jmiss$created)
kenya_jmiss %>% count(year, type, sort = TRUE)
library(tidyr)
library(stringr)
kenya$issued_blank <- str_detect(kenya$issued, "") # detect blanks
library(dplyr)
kenya_res_dates <- filter(kenya, issued_blank == TRUE)
library(dplyr)
library(ggplot2)
library(plotly)
out <- kenya_res_dates %>%
separate(., issued, c("year", "month", "date"), sep = "-", fill = "right") %>%
count(year) %>%
filter(year >= 1990 & year <= 2016) %>%
ggplot(aes(x = year, y = n, group = 1)) +
scale_x_discrete(breaks=seq(1990, 2015, 5)) +
geom_line()
ggplotly(out)
library(fulltext)
doi <- kenya$DOI
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "ecology") %>%
select(DOI)
data(dois_crminer)
library(crminer)
data(dois_crminer)
test <- lapply(dois_crminer[1:3], crm_links)
View(test)
test[[1]]$pdf
kenya_ecology_doi <- map(kenya_ecology$DOI, crm_links)
View(dois_crminer)
class(dois_crminer)
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "ecology") %>%
select(DOI) %>%
as.character()
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "ecology") %>%
select(DOI)
kenya_doi <- c(kenya_ecology)
View(kenya_doi)
kenya_doi <- c(kenya_ecology$DOI)
kenya_doi <- c(kenya_ecology)
kenya_doi <- str_c(kenya_ecology$DOI)
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "ecology") %>%
select(DOI)
kenya_doi <- str_c(kenya_ecology$DOI)
kenya_doi <- kenya_ecology$DOI
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "ecology") %>%
select(DOI)
View(kenya_ecology)
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",")
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "ecology")
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",")
View(kenya_ecology)
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "Ecology") %>%
select(DOI)
kenya_doi <- str_c(kenya_ecology$DOI)
kenya_doi
dois_crminer
kenya_ecology_doi <- map(kenya_doi, crm_links)
View(kenya_ecology_doi)
kenya_ecology_doi[[1]]$unspecified
kenya_ecology_doi[[2]]$unspecified
names(kenya_ecology_doi)
?set_names
kenya_ecology_doi <- set_names(kenya_ecology_doi, nm = kenya_doi)
names(kenya_ecology_doi)
str(kenya_ecology_doi)
?attr_getter
kenya_ecology_doi %>% pluck(., 1, accessor, "unspecified")
kenya_ecology_doi[[1]]
kenya_ecology_doi[[2]]$unspecified
kenya_ecology_doi[[3]]$unspecified
kenya_ecology_doi[[4]]$unspecified
kenya_ecology_doi[1]$unspecified
kenya_ecology_doi[2]$unspecified
kenya_ecology_doi[[3]]
kenya_ecology_doi[[2]]
kenya_ecology_doi[[3]]
kenya_ecology_doi[[4]]
kenya_ecology_doi[[5]]
kenya_ecology_doi[[6]]
kenya_ecology_doi[[7]]
kenya_ecology_doi[[8]]
kenya_ecology_doi[[9]]
kenya_ecology_doi[[10]]
kenya_ecology_doi[[11]]
kenya_ecology_doi[[12]]
kenya_ecology_doi[[13]]
kenya_ecology_doi[[14]]
kenya_ecology_doi[[15]]
kenya_ecology_doi[[16]]
kenya_ecology_doi[[17]]
kenya_ecology_doi[[18]]
kenya_ecology_doi[[19]]
kenya_ecology_doi[[20]]
kenya_ecology_doi[[21]]
kenya_ecology_doi[[22]]
kenya_ecology_doi[[23]]
kenya_ecology_doi[[24]]
map(kenya_ecology_doi, `[`)
map(kenya_ecology_doi, `[`, length)
map(kenya_ecology_doi, length)
map(kenya_ecology_doi, `[` length)
map(kenya_ecology_doi, `[`, length)
unspecified_element <- function(x) x[[1]]$unspecified
xml_element <- function(x) x[[1]]$xml
plain_element <- function(x) x[[1]]$plain
pluck(kenya_ecology_doi, 1, unspecified_element)
pluck(kenya_ecology_doi, `[`, unspecified_element)
pluck(kenya_ecology_doi, 2, unspecified_element)
pluck(kenya_ecology_doi, 1, unspecified_element)
map(kenya_ecology_doi, pluck, unspecified_element)
map(kenya_ecology_doi, `[`, pluck( unspecified_element))
obj1 <- structure("obj", obj_attr = "foo")
obj2 <- structure("obj", obj_attr = "bar")
x <- list(obj1, obj2)
obj1 <- list("a", list(1, elt = "foobar"))
obj2 <- list("b", list(2, elt = "foobaz"))
x <- list(obj1, obj2)
x
# And now an accessor for these complex data structures:
my_element <- function(x) x[[2]]$elt
# The accessor can then be passed to pluck:
pluck(x, 1, my_element)
pluck(x, 2, my_element)
pluck(kenya_ecology_doi, 10, xml_element)
pluck(kenya_ecology_doi, length, xml_element)
pluck(kenya_ecology_doi, 22, xml_element)
obj1 <- structure("obj", obj_attr = "foo")
obj2 <- structure("obj", obj_attr = "bar")
x <- list(obj1, obj2)
# pluck() is handy for extracting deeply into a data structure.
# Here we'll first extract by position, then by attribute:
pluck(x, 1, attr_getter("obj_attr"))  # From first object
pluck(kenya_ecology_doi, 1, attr_getter("obj_attr"))
pluck(kenya_ecology_doi, 2, attr_getter("obj_attr"))
pluck(kenya_ecology_doi, 3, attr_getter("obj_attr"))
str(kenya_ecology_doi)
pluck(kenya_ecology_doi, 1, attr_getter("class"))
pluck(kenya_ecology_doi, 10, attr_getter("class"))
str(kenya_ecology_doi[1:20])
str(kenya_ecology_doi[1:5])
pluck(kenya_ecology_doi, 1, attr_getter("class"))
obj1 <- structure("obj", obj_attr = "foo")
str(obj1)
pluck(kenya_ecology_doi, 1, attr_getter("tdmurl"))
obj1 <- list("a", list(1, elt = "foobar"))
obj2 <- list("b", list(2, elt = "foobaz"))
x <- list(obj1, obj2)
str(x)
# And now an accessor for these complex data structures:
my_element <- function(x) x[[2]]$elt
# The accessor can then be passed to pluck:
pluck(x, 1, my_element)
pluck(x, 2, my_element)
pluck(kenya_ecology_doi, 1, unspecified_element)
pluck(kenya_ecology_doi, 2, unspecified_element)
pluck(kenya_ecology_doi, 3, unspecified_element)
pluck(kenya_ecology_doi, 4, unspecified_element)
pluck(kenya_ecology_doi, 5, unspecified_element)
pluck(kenya_ecology_doi, 6, unspecified_element)
str(kenya_ecology_doi[1:10])
obj1 <- structure("obj", obj_attr = "foo")
obj2 <- structure("obj", obj_attr = "bar")
x <- list(obj1, obj2)
x
# pluck() is handy for extracting deeply into a data structure.
# Here we'll first extract by position, then by attribute:
pluck(x, 1, attr_getter("obj_attr"))  # From first object
pluck(x, 2, attr_getter("obj_attr"))  # From second object
str(kenya_ecology_doi[1])
str(x)
pluck(kenya_ecology_doi, 1, attr_getter("class"))
pluck(kenya_ecology_doi, 2, attr_getter("class"))
purrr::map(c("class", "member"), ~ kenya_ecology_doi[.]) %>% unlist()
pluck(kenya_ecology_doi, xml_element)
pluck(kenya_ecology_doi, 1, xml_element)
pluck(kenya_ecology_doi, 2, xml_element)
pluck(kenya_ecology_doi, 3, xml_element)
pluck(kenya_ecology_doi, 1:3, xml_element)
map(kenya_ecology_doi, pluck, xml_element)
map(kenya_ecology_doi, 1, pluck, xml_element)
plain_elt <- map(kenya_ecology_doi, 1, pluck, plain_element)
View(plain_elt)
xml_elt <- map(kenya_ecology_doi, 1, pluck, xml_element)
View(xml_elt)
names(xml_elt)
unspec_elt <- map(kenya_ecology_doi, 1, pluck, unspecified_element)
View(unspec_elt)
unspec_elt <- map(kenya_ecology_doi, 1, pluck, unspecified_element) %>% tibble::tibble()
unspec_elt <- map(kenya_ecology_doi, 1, pluck, unspecified_element) %>% tibble::as_tibble()
unspec_elt <- map(kenya_ecology_doi, 1, pluck, unspecified_element) %>% bind_rows()
unspec_elt <- map(kenya_ecology_doi, 1, pluck, unspecified_element) %>% unlist()
unspec_elt <- map(kenya_ecology_doi, 1, pluck, unspecified_element) %>% unlist() %>% tibble::tibble()
View(unspec_elt)
plain_elt <- map(kenya_ecology_doi, 1, pluck, plain_element) %>% unlist() %>% tibble::tibble(plain = ".")
View(plain_elt)
plain_elt <- map(kenya_ecology_doi, 1, pluck, plain_element) %>% unlist() %>% tibble::tibble(., plain = ".")
View(plain_elt)
plain_elt <- map(kenya_ecology_doi, 1, pluck, plain_element) %>% unlist() %>% tibble::tibble(., plain)
plain_elt <- map(kenya_ecology_doi, 1, pluck, plain_element) %>% unlist() %>% tibble::tibble(., "plain")
View(plain_elt)
?tibble
?as_tibble()
unspec_elt <- map(kenya_ecology_doi, 1, pluck, unspecified_element) %>% tibble::as_tibble()
tibble::tibble()
tibble::tibble()
load("~/Desktop/open_source_master/blogdown_again/data/kenya_results.rda")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, out.width = "400px", tidy = TRUE)
load("data/kenya_results.rda")
load("~/Desktop/open_source_master/blogdown_again/data/kenya_results.rda")
kenya <- kenya_results$data
save(kenya, file = "kenya.rda")
library(tidyverse)
kenya %>% count(subject, sort = TRUE)
library(tidyverse)
subjects <- kenya %>%
separate_rows(subject, sep = ",") %>%
count(subject, sort = TRUE)
subjects
library(tidyverse)
library(ggplot2)
subjects[1:15, ] %>%
ggplot2::ggplot(aes(subject, n, fill = subject)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3) +
coord_flip()
kenya$subject[is.na(kenya$subject)] <- "Unknown"
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, vjust = 10) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = 10) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = -10) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = -2) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = -1) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = -0.5) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = -0.2) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = -0.1) +
coord_flip()
library(tidyverse)
kenya %>%
count(type, sort = TRUE) %>%
ggplot2::ggplot(aes(type, n, fill = type)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = n), size = 3, hjust = -0.01) +
coord_flip()
kenya_miss <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "Unknown") %>%
count(subject, type, sort = TRUE)
kenya_jmiss <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "Unknown") %>%
count(created, type, sort = TRUE) %>%
filter(type == "journal-article")
kenya_jmiss$created <- lubridate::ymd(kenya_jmiss$created)
kenya_jmiss$year <- lubridate::year(kenya_jmiss$created)
kenya_jmiss %>% count(year, type, sort = TRUE)
library(tidyr)
library(stringr)
kenya$issued_blank <- str_detect(kenya$issued, "") # detect blanks
library(dplyr)
kenya_res_dates <- filter(kenya, issued_blank == TRUE)
library(dplyr)
library(ggplot2)
library(plotly)
out <- kenya_res_dates %>%
separate(., issued, c("year", "month", "date"), sep = "-", fill = "right") %>%
count(year) %>%
filter(year >= 1990 & year <= 2016) %>%
ggplot(aes(x = year, y = n, group = 1)) +
scale_x_discrete(breaks=seq(1990, 2015, 5)) +
geom_line()
ggplotly(out)
library(crminer)
library(fulltext)
doi <- kenya$DOI
# attempt to get links to full texts from a DOI
kenya_ecology <- kenya %>%
separate_rows(subject, sep = ",") %>%
filter(subject == "Ecology") %>%
select(DOI)
kenya_doi <- str_c(kenya_ecology$DOI)
## use purrr map to return list
kenya_ecology_doi <- map(kenya_doi, crm_links)
## returns an unnamed list of the same length as the input
kenya_ecology_doi <- set_names(kenya_ecology_doi, nm = kenya_doi)
# now we have a list of mixed length
unspecified_element <- function(x) x[[1]]$unspecified
xml_element <- function(x) x[[1]]$xml
plain_element <- function(x) x[[1]]$plain
pluck(kenya_ecology_doi, 1, unspecified_element)
map(kenya_ecology_doi, `[`, pluck( unspecified_element))
View(kenya)
kenya %>% select(container.title, subject, title)
kenya %>% select(container.title, subject, title, type, url, DOI, ISSN, ISBN) %>% writexl::write_xlsx(., "kenya_subjects.xlsx")
kenya %>% select(container.title, subject, title, type, DOI, ISSN, ISBN) %>% writexl::write_xlsx(., "kenya_subjects.xlsx")
save(kenya_ecology, file = "data/kenya_ecology.rda")
save(kenya_ecology_doi, file = "data/kenya_ecology_doi.rda")
blogdown:::new_post_addin()
load("~/Desktop/open_source_master/asean/data/worms_groups_combined_patents_taxonomy.rda")
worms_data <- worms_groups_combined_patents_taxonomy
worms_data <- worms_groups_combined_patents_taxonomy
saveRDS(worms_data, file = "data/worms.rds")
saveRDS(worms_data, file = "worms.rds")
View(worms_data)
c(worms_data$scientificname)
worms <- readRDS("~/Desktop/open_source_master/blogdown_again/data/worms.rds")
worms$scientificname %>% dplyr::count()
library(tidyverse)
worms$scientificname %>% dplyr::count()
worms %>% count(scientificname)
library(tidyverse)
species <- worms %>% count(scientificname)
#apium <- wm_records_name(name = 'apium graveolens')
View(species)
c(species$scientificname[1:2])
test <- wm_records_name(name = c(species$scientificname[1:2]))
library(tidyverse)
library(worrms)
species <- worms %>% count(scientificname)
test <- wm_records_name(name = c(species$scientificname[1:2]))
species <- worms %>% count(scientificname) %$%
species
library(tidyverse)
library(magrittr)
library(worrms)
species <- worms %>% count(scientificname) %$%
species
#test <- wm_records_name(name = c(species$scientificname[1:2]))
View(species)
View(species)
library(tidyverse)
library(magrittr)
library(worrms)
species <- worms %>% count(scientificname) %$%
scientificname
#test <- wm_records_name(name = c(species$scientificname[1:2]))
length(species)
species <- worms %>% count(scientificname)
species$scientificname[1:2]
map(species$scientificname[1:2], wm_records_name)
library(tidyverse)
library(magrittr)
library(worrms)
species <- worms %>% count(scientificname)
map(species$scientificname[1:2], wm_records_name) %>%
bind_rows()
#test <- wm_records_name(name = c(species$scientificname[1:2]))
library(tidyverse)
library(magrittr)
library(worrms)
species <- worms %>% count(scientificname)
test <- map(species$scientificname[1:2], wm_records_name) %>%
bind_rows()
#test <- wm_records_name(name = c(species$scientificname[1:2]))
View(test)
results <- map(species$scientificname, wm_records_name) %>%
bind_rows()
# works on a f
results <- map(species$scientificname[1:1000], wm_records_name) %>%
bind_rows()
# works on a f
results <- map(species$scientificname[1:100], wm_records_name)
# works on a f
results <- map(species$scientificname[1:2], wm_records_name)
results <- map(species$scientificname[1:3], wm_records_name)
results <- map(species$scientificname[1:10], wm_records_name)
results <- map(species$scientificname[1:500], wm_records_name)
results <- map(species$scientificname[1:100], wm_records_name)
results <- map(species$scientificname[1:50], wm_records_name)
results <- map(species$scientificname[1:20], wm_records_name)
load("~/Desktop/open_source_master/asean/data-taxonomy/taxonomy_final.rda")
part1 <- taxonomy_final %>% select(species) %$% species[1:6000]
part1 <- taxonomy_final %>% select(species) %>% .[1:6000]
part1 <- taxonomy_final %>% select(species) %>% species[1:6000]
part1 <- taxonomy_final %>% select(species[1:6000])
part1 <- taxonomy_final %>% select(species)
part1 <- part1[1:6000]
part1 <- part1$species[1:6000]
blogdown::build_site()
blogdown::render_site()
blogdown::render_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
